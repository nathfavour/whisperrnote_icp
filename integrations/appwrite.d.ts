import { type Models } from 'node-appwrite';

// This file is auto-generated by the Appwrite CLI. 
// You can regenerate it by running `appwrite types src/types`.

export enum Status {
    DRAFT = "draft",
    PUBLISHED = "published",
    ARCHIVED = "archived"
}

export enum Status {
    DRAFT = "draft",
    PUBLISHED = "published",
    ARCHIVED = "archived"
}

export enum TargetType {
    NOTE = "note",
    COMMENT = "comment"
}

export enum Permission {
    READ = "read",
    WRITE = "write",
    ADMIN = "admin"
}

export type Users = Models.Document & {
    id: string | null;
    email: string | null;
    name: string | null;
    walletAddress: string | null;
    createdAt: string | null;
    updatedAt: string | null;
}

export type Notes = Models.Document & {
    id: string | null;
    createdAt: string | null;
    updatedAt: string | null;
    userId: string | null;
    isPublic: boolean | null;
    status: Status | null;
    parentNoteId: string | null;
    title: string | null;
    content: string | null;
    tags: string[] | null;
    attachments: string[] | null;
    comments: string[] | null;
    extensions: string[] | null;
    collaborators: string[] | null;
    metadata: string | null;
}

export type Tags = Models.Document & {
    id: string | null;
    name: string | null;
    notes: string[] | null;
    createdAt: string | null;
    color: string | null;
    description: string | null;
    usageCount: number | null;
    userId: string | null;

}

export type ApiKeys = Models.Document & {
    id: string | null;
    key: string | null;
    name: string | null;
    userId: string | null;
    createdAt: string | null;
    lastUsed: string | null;
    expiresAt: string | null;
    scopes: string[] | null;
    lastUsedIp: string | null;
}

export type BlogPosts = Models.Document & {
    id: string | null;
    title: string | null;
    content: string | null;
    createdAt: string | null;
    updatedAt: string | null;
    authorId: string | null;
    tags: string[] | null;
    coverImage: string | null;
    excerpt: string | null;
    status: Status | null;
    comments: string[] | null;
    extensions: string[] | null;
    metadata: string | null;
}

export type Comments = Models.Document & {
    noteId: string;
    userId: string;
    content: string;
    createdAt: string;
    parentCommentId: string | null;
}

export type Extensions = Models.Document & {
    name: string;
    description: string | null;
    version: string | null;
    authorId: string | null;
    enabled: boolean | null;
    settings: string | null;
    createdAt: string | null;
    updatedAt: string | null;
}

export type Reactions = Models.Document & {
    targetType: TargetType;
    targetId: string;
    userId: string;
    emoji: string;
    createdAt: string;
}

export type Collaborators = Models.Document & {
    noteId: string;
    userId: string;
    permission: Permission;
    invitedAt: string | null;
    accepted: boolean | null;
}

export type ActivityLog = Models.Document & {
    userId: string;
    action: string;
    targetType: string;
    targetId: string;
    timestamp: string;
    details: string | null;
}

export type Settings = Models.Document & {
    userId: string;
    settings: string;
    createdAt: string | null;
    updatedAt: string | null;
    mode: string | null;
}

export type AuthPasskeyChallenges = Models.Document & {
    userId: string | null;
    token: string | null;
}

export type AuthPasskeyCredentials = Models.Document & {
    userId: string | null;
    credentials: string | null;
}
